@startuml
hide circle
skinparam linetype ortho
skinparam package {
BackgroundColor LightYellow
}
'top to bottom direction
left to right direction
skinparam ClassAttributeIconSize 0

package model {
  abstract class TotalRevenue {
- showTotalRevenue(totalRevenue : Amount)
- createTime() : String
# <<create>>TotalRevenue ()
# {abstract} doShowTotalRevenue(totalRevenue : Amount, timeStamp : String)
# {abstract} handleErrors(e : Exception) : void
}
  interface SaleObserver <<interface>> {
+ updateSale(sale : LimitedSaleView)
  }
  interface CashRegisterObserver <<interface>> {
+ updateRevenue(totalRevenue : Amount) : void
  }
}

package view {
  abstract class SaleView {
  - listOfShoppingCartItems : List<ShoppingCartItem>
  - sale :LimitedSaleView
  # <<create>> SaleView()
  # createSaleItemsInfoString() : String
  # addNewSaleInfoDetails(sale : LimitedSaleView) : void
  # {abstract} printCurrentState(sale : LimitedSaleView) : void
  # {abstract} sortShoppingCart(listOfShoppingCartItems : List<ShoppingCartItem>) : void
  # {abstract} shouldUpdate(isComplete : boolean) : boolean
  }
  class EndOfSaleView {
  # printCurrentState(sale : LimitedSaleView) : void
  # sortShoppingCart(listOfShoppingCartItems : List<ShoppingCartItem>) : void
  # shouldUpdate(isComplete : boolean) : boolean
  - createDiscountInfoString(discount : Amount, discountInfo : String) : void
    }
  class RunningSaleView {
  # printCurrentState(sale : LimitedSaleView) : void
  # sortShoppingCart(listOfShoppingCartItems : List<ShoppingCartItem>) : void
  # shouldUpdate(isComplete : boolean) : boolean
  }
  class TotalRevenueView {
  # doShowTotalRevenue(totalRevenue : Amount, String timeStamp)
  # handleErrors(e : Exception) : void
  }
}
package integration {
  class TotalRevenueFileOutput <<singeton>> {
  - FILE_SEPARATOR  : String
  - FILE_PATH : String
  - LOG_FILE_NAME : String
  - revenueLogger : PrintWriter
  - logger : ErrorFileLogHandler
  # doShowTotalRevenue(totalRevenue : Amount, timeStamp : String)
  # handleErrors(e : Exception) : void
  }
}

'interfaces
CashRegisterObserver <|-[dashed]- TotalRevenue
TotalRevenue <|- TotalRevenueView
TotalRevenue <|- TotalRevenueFileOutput

SaleObserver <|-[dashed]- SaleView
SaleView <|-- EndOfSaleView
SaleView <|-- RunningSaleView

@enduml